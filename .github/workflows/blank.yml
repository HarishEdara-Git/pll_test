name: Deploy Pods and Services to EKS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-south-1 # Replace with your AWS region
  CLUSTER_NAME: harisheks  # Replace with your EKS cluster name
  NAMESPACE: my-namespace  # Replace with your namespace

jobs:
  deploy:
    name: Deploy Pod and Service
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: SSH into Bastion Host
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.BASTION_HOST_SSH_KEY }} ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOST_IP }} << EOF
          # Commands to execute on Bastion Host (replace with your commands)
          # Example: Update kubeconfig with VPC Endpoint URL
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.CLUSTER_NAME }}

          # Your existing kubectl commands for deployment setup
          kubectl apply -f deployment.yml -n ${{ env.NAMESPACE }}
          kubectl apply -f service.yml -n ${{ env.NAMESPACE }}
          # ... rest of your existing kubectl commands ...

          EOF
        env:
          <private_key_path>: ${{ secrets.BASTION_HOST_SSH_KEY }}  # Replace with secret name
          <bastion_user>: ${{ secrets.BASTION_USER }}  # Replace with bastion host username
          <bastion_host_ip>: ${{ secrets.BASTION_HOST_IP }}  # Replace with bastion host IP address

          # Optional: Environment variables for kubectl commands
